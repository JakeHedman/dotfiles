#coding: utf-8
# Swedish keys
$XKB_DEFAULT_LAYOUT = 'se'
$XKB_DEFAULT_VARIANT = 'nodeadkeys'
$XKB_DEFAULT_OPTIONS = 'caps:escape'

# Use rg config path
$RIPGREP_CONFIG_PATH = '~/.rgrc'

# Vim-like bindings
$VI_MODE = True

# qutebrowser/vim
$BROWSER = 'qutebrowser'
$EDITOR = 'nvim'

# Rebind hjlk to jkl; in vim mode
from prompt_toolkit.filters import ViNavigationMode
from prompt_toolkit.key_binding.key_processor import KeyPress
from prompt_toolkit.keys import Keys

$DYNAMIC_CWD_WIDTH='30%'

@events.on_ptk_create
def custom_keybindings(bindings, **kw):
  @bindings.add('j', filter=ViNavigationMode())
  def _(event):
    buff = event.current_buffer
    buff.cursor_position += buff.document.get_cursor_left_position(count=event.arg)

  @bindings.add('k', filter=ViNavigationMode())
  def _(event):
    event.cli.key_processor.feed(KeyPress(Keys.Down, ''))

  @bindings.add('l', filter=ViNavigationMode())
  def _(event):
    event.cli.key_processor.feed(KeyPress(Keys.Up, ''))

  @bindings.add('\xF6', filter=ViNavigationMode())
  def _(event):
    buff = event.current_buffer
    buff.cursor_position += buff.document.get_cursor_right_position(count=event.arg)

# mkcd = mkdir + cd
def _mkcd(args):
  mkdir -p @(args[0])
  cd @(args[0])

aliases['mkcd'] = _mkcd

# LANG
$LANG = 'en_US.UTF-8'
$LC_ALL = 'en_US.UTF-8'

$PATH.insert(0, '~/Android/Sdk/platform-tools')
$PATH.insert(0, '~/Android/Sdk')
$PATH.insert(0, '~/bin')
$PATH.insert(1, '~/Manager/bin')
$PATH.append('~/.yarn/bin')
$PATH.append('~/.cargo/bin')
$PATH.append('~/.gem/ruby/2.6.0/bin')
$PATH.append('~/depot_tools')
$PATH.append('/var/lib/snapd/snap/bin')

# Aliases
aliases[':q'] = 'exit'
aliases['v'] = 'nvim'
aliases['vim'] = 'nvim'

# Git aliases
aliases['g'] = 'git'
aliases['gl'] = 'git log'
aliases['gs'] = 'git status'
aliases['gd'] = 'git diff'
aliases['gdc'] = 'git diff --cached'
aliases['ga'] = 'git add'
aliases['gco'] = 'git commit'
aliases['gch'] = 'git checkout'

# Exec dir to cd
$AUTO_CD = True

# Avoid termite TERM
$TERM = 'xterm-256color'

$ANDROID_HOME = $HOME + '/Android/Sdk'

# Autostart i3
if $(tty).strip() == '/dev/tty1':
  import sys
  try:
    startx
  except:
    pass
  sys.exit()
