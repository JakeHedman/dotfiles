set nocompatible
filetype off

" Set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" Let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

Plugin 'Lokaltog/vim-easymotion'
Plugin 'kien/ctrlp.vim'
Plugin 'mileszs/ack.vim'
Plugin 'nathanaelkane/vim-indent-guides'
Plugin 'scrooloose/nerdcommenter'
Plugin 'scrooloose/syntastic'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'tomasr/molokai'
Plugin 'tpope/vim-fugitive'
Plugin 'mnpk/vim-jira-complete'
Plugin 'heavenshell/vim-jsdoc'
Plugin 'pangloss/vim-javascript'

" All of your Plugins must be added before the following line
call vundle#end()
filetype plugin indent on

" Toggle paste mode (no auto indent) with f2
set pastetoggle=<f2>

" , as extra modifier key (Leader)
let mapleader = ","

" Leader-h to show hidden chars
nmap <leader>h :set list!<CR>

" HJKL to resize split windows
map <s-k> <C-W>+
map <s-j> <C-W>-
map <s-h> <C-W><
map <s-l> <C-W>>

" ^hjkl to navigate split windows
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-l> <C-W>l
map <C-h> <C-W>h

" Leader-s to sort selected lines e.g. to sort python imports alphabetically
vnoremap <Leader>s :sort<CR> 

" Q wraps paragraph
vmap Q gq
nmap Q gqap

" Do not deselect when indenting
vnoremap < < gv
vnoremap > > gv

" Syntax highlighting
filetype off
filetype plugin indent on
syntax on

" Textwidth - Maximum width of text that is being inserted.  A longer line will
" be broken after white space to get this width.  A zero value disables  
" set tw=79

" Don't wrap lines
set nowrap

" Hilight line 80
set fo-=t
set colorcolumn=80
highlight ColorColumn ctermbg=DarkGray

" BAM your <Tab> and <Backspace> keys are convenient now without the pain
" associated with \t characters in source files
set shiftwidth=4
set softtabstop=4 expandtab

" Don't add newlines at ends of files
set fileformats+=dos

" Save >9k actions in undo history
set undolevels=9001

" Highlight all search results
set hlsearch

" ,l redraws the screen and removes any search highlighting. 
nnoremap <silent> <Leader>l :nohl<CR>

" Search while typing
set incsearch

" When 'ignorecase' and 'smartcase' are both on, if a pattern contains an
" uppercase letter, it is case sensitive, otherwise, it is not. For example,
" /The would find only "The", while /the would find "the" or "The" etc.
set ignorecase
set smartcase

" UTF-8!!
set encoding=utf-8
set fileencoding=utf-8
set fileencodings=utf-8

" No beepin'
set vb t_vb=

" Center cursor vertically
set scrolloff=999

" Toggle scrolloff with ,z
nnoremap <silent> <Leader>z :let &scrolloff=999-&scrolloff<CR>

" Hilight current line
set cursorline

" Toggle column hilight with ,c
nnoremap <Silent> <Leader>c :set cursorcolumn!<CR>

" Try to save swapfiles in ~/.vim/swap, save in current dir if it fails
set directory^=$HOME/.vim/swap//,.

" Molokai (monokai from textmate)
colors molokai
set background=light


" Fix backspace in insert mode
set backspace=2

" Always show line numbers, but only in current window.
set rnu
au WinEnter * :setlocal rnu
au WinLeave * :setlocal nornu

" Disable paste mode when leaving Insert Mode
au InsertLeave * set nopaste

" Absolute line numbers in insert mode, relative otherwise for easy movement
au InsertEnter * :set rnu!
au InsertLeave * :set rnu

:set rnu
:set nu

" Open new splits to the right/bottom
set splitright splitbelow

" Always show status/power-line
set laststatus=2

" bash-like bindings for vim's command line
cnoremap <C-a>  <Home>
cnoremap <C-b>  <Left>
cnoremap <C-f>  <Right>
cnoremap <C-d>  <Delete>
cnoremap <M-b>  <S-Left>
cnoremap <M-f>  <S-Right>
cnoremap <M-d>  <S-right><Delete>
cnoremap <Esc>b <S-Left>
cnoremap <Esc>f <S-Right>
cnoremap <Esc>d <S-right><Delete>
cnoremap <C-g>  <C-c>

" ...
command WQ wq
command Wq wq
command W w
command Q q

" (Hopefully) removes the delay when hitting esc in insert mode
set noesckeys
set ttimeout
set ttimeoutlen=1

" Fix arrow keys for code completion
set nocompatible

" Statusline
" %F - Longer path
" %r readonly flag
" %m modified flag
" %y filetype
" %c column
" %l line
" %L number of lines
" %P percentage through buffer
set statusline=%F%r%m\ %y%=%c\ %l/%L\ %P

" Disable double leader in EasyMotion
let g:EasyMotion_leader_key = '<Leader>'

function! Fixvim(...)
	set mouse=c
	inoremap  <Up>     <NOP>
	inoremap  <Down>   <NOP>
	inoremap  <Left>   <NOP>
	inoremap  <Right>  <NOP>
	noremap   <Up>     <NOP>
	noremap   <Down>   <NOP>
	noremap   <Left>   <NOP>
	noremap   <Right>  <NOP>
endfunction
autocmd CursorMoved * call Fixvim()

let g:multi_cursor_exit_from_insert_mode = 0
let g:multi_cursor_exit_from_visual_mode = 0

" Better tab completion
set wildmenu

" tabs are 4 spaces
set tabstop=4

" ,t for new tab
nnoremap <leader>t <Esc>:tabnew<CR>

" Indent guides
let g:indent_guides_enable_on_vim_startup = 1
let g:indent_guides_start_level = 2
let g:indent_guides_guide_size = 1
let g:indent_guides_auto_colors = 0
hi IndentGuidesOdd ctermbg=234
hi IndentGuidesEven ctermbg=235
set wildignore+=*bower_components,node_modules,webroot,tmp

" Use the silver search instead of slow ack
let g:ackprg = 'ag --vimgrep'

" Syntastic
let g:syntastic_python_checkers = ['pyflakes']
let g:syntastic_javascript_checkers = ['jscs']
let g:syntastic_scss_checkers = ['scss_lint']
let g:syntastic_css_checkers = ['csslint']
let g:syntastic_aggregate_errors = 1

" Jira
let g:jiracomplete_url = { 'url': 'http://tickets.int.prnw.net/', 'verify': 'False' }
let g:jiracomplete_username = 'jhedman'
imap <silent> <unique> <leader>j <Plug>JiraComplete
